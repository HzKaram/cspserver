doctype html
head
  meta(charset='utf-8')
  meta(http-equiv='X-UA-Compatible' content='IE=edge')
  meta(name='viewport' content='width=device-width, initial-scale=1')
  meta(name='description' content='Reporting API demo')
  title üí• Reporting API demo
  link(rel='stylesheet' href='/style.css')
  script(src='/script.js' defer='')
  script(src='https://example.com/script.js' defer='') <!-- CSP violation -->
body
  header
    h1 Reporting API demo: üí• Reports generation page
    div(class="info-banner")
      a(href=codeUrl) SEE THE CODE üë©üèª‚Äçüíª
      span   ‚ú¶  Questions? Ping 
        a(href=author) maudnals
        |.
      div.aside.error
        | Run this demo in Chrome, version 96 or later (check via chrome://version). 
        | Optionally, run Chrome with the flag --short-reporting-delay. ‚ö†Ô∏è This flag is not 
        | available via the Chrome UI, it's a command line flag only. See  
        a(href="https://www.chromium.org/developers/how-tos/run-chromium-with-flags") How to run Chromium with flags
        |.
      div.aside
        | The Reporting API is a generic framework to allow reporting for web platform features. 
        | This demo runs code that deliberately violates policies and does other bad things in order to generate reports. 
        | See the policies in the code's server.js file.
  main
    div
      span This page uses the  
      span(class=`badge ${version}`)=`Reporting API ${version}`
      |.
    br
    ol
      li Open 
        code chrome://flags/#enable-experimental-web-platform-features
        | , 
        strong Enable 
        | this flag and restart Chrome.
      li Load this page. Upon loading, this page generates one report of each of these types (if supported by the browser):
        ul
          li Document policy violation
          li Deprecation
          li CSP violation
          li COOP violation
          li Browser intervention
          li (Experimental: permissions policy violation)
      li Open or reload 
        a(href=reportsDisplayUrl)=reportsDisplayUrl
        |  to see all reports.

    div.note ‚òùÔ∏è Note: If you want to generate a crash report, you'll need to do it manually: type chrome://crash/ in your browser from this page.
    div.note ‚òùÔ∏è Note: This page has console errors and issues. That's expected: it tries to violate its own security rules, uses deprecated APIs, and does other bad things in order to generate reports.
    details
      summary üí• Troubleshooting: not seeing all reports?
      span=`If you're not seeing a deprecation report, open `
      a(href=interventionGeneratorUrl)=interventionGeneratorUrl
      |  in a different window, then reload this page, and finally reload 
      a(href=reportsDisplayUrl)=reportsDisplayUrl
      |  to see if the report appears.
    div
      | Intervention generator:
      iframe(width='10' height='5' crossorigin='' src=`${interventionGeneratorUrl}` title='')